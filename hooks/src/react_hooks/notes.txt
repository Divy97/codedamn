UseRef :- 

store the reference of the ELEMENT not the value 
returns mutable object and has only one property known as .current 
never ever re-renders the DOM ELEMENT 

UseReducer :- 

is also used to manage state and re-render component when state change 
useReducer Hook takes 2 arguments: reducerFunction, initialValue
generally you pass object as an initialValue in useReducer Hook.

STATE, DISPATCH, ACTION, ACTION_TYPE 
function reducerFunction(state, action) {
    return {
        count: state.count + 1;
    }
}

const [state, dispatch] = useReducer(reducerFunction, {count: 0});

dispatch is function basically used to update state 

useMemo :- 

useMemo aka Memoization is basically used for caching a value so youüìù
have to use it every single time 
is used in very computationally expensive tasks because it memoize
the value and rendered only once unless and until that value has not changed 

useCallback :-

useCallback and useMemo works same but the only difference is that 
useMemo returns value from a function and useCallback returns an entire function